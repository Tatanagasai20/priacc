pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/Tatanagasai20/priacc.git'
        BRANCH = 'main'  // Make sure this branch exists
        REMOTE_HOST = 'ubuntu@65.0.169.165'
        CREDENTIALS_ID = 'ubuntu'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('Build & Deploy Frontend') {
            steps {
                sshagent(credentials: ["${CREDENTIALS_ID}"]) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "rm -rf ~/frontend"
                    scp -o StrictHostKeyChecking=no -r frontend ${REMOTE_HOST}:/home/ubuntu/
                    ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} '
                        cd ~/frontend &&
                        docker build -t priacc-frontend . &&
                        docker rm -f priacc-frontend || true &&
                        docker run -d --name priacc-frontend -p 3000:3000 priacc-frontend
                    '
                    """
                }
            }
        }

        stage('Build & Deploy Backend') {
            steps {
                sshagent(credentials: ["${CREDENTIALS_ID}"]) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "rm -rf ~/backend"
                    scp -o StrictHostKeyChecking=no -r backend ${REMOTE_HOST}:/home/ubuntu/
                    ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} '
                        cd ~/backend &&
                        ./mvnw clean install &&
                        docker build -t priacc-backend . &&
                        docker rm -f priacc-backend || true &&
                        docker run -d --name priacc-backend -p 8080:8080 priacc-backend
                    '
                    """
                }
            }
        }
    }
}
